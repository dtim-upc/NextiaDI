plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    implementation group: 'org.apache.jena', name: 'jena-arq', version: '4.4.0'
//    implementation fileTree(dir: 'lib', include: ['*.jar'])

    implementation 'info.picocli:picocli:4.6.3'
    implementation group: 'org.json', name: 'json', version: '20210307'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.20'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.20'

    implementation 'com.github.opendevl:json2flat:1.0.3'
    implementation group: 'uk.co.jemos.podam', name: 'podam', version: '7.1.0.RELEASE'
    implementation 'com.github.javafaker:javafaker:1.0.2'
    implementation 'com.devskiller:jfairy:0.6.4'
//    implementation group: "edu.upc.essi.dtim", name: "NextiaDI", version: "1.0.1-SNAPSHOT", transitive: true

    implementation 'edu.upc.essi.dtim:nextiadi:0.1.0'
    implementation group: 'org.glassfish', name: 'javax.json', version: '1.1.4'

}

test {
    useJUnitPlatform()
}
// for snapshot dependency test
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

task uberJar(type: Jar) {
    archiveClassifier = 'uber'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}